// Launching LWR SIM
require("print")

import("rtt_ros")
ros.import("rtt_lwr_sim")

loadComponent("lwr_sim","lwr::LWRSim")
setActivity("lwr_sim",0.001,HighestPriority-1,ORO_SCHED_RT)

lwr_sim.configure()

lwr_sim.waitForROSService("/lwr_gazebo/ready")

stream("lwr_sim.JointStateCommand", ros.comm.topic("/lwr_gazebo/joint_states_cmd"))
stream("lwr_sim.JointStateGazebo", ros.comm.topic("/lwr_gazebo/joint_states"))

var int trials=10;
while(!loadComponent("gazebo","CORBA")) {
    print.ln("\033[33m[lwr_sim] Trying to load via corba \033[0m");
    trials = trials -1;
    if(trials == 0) then {
        print.ln("\033[1m\033[31m[lwr_sim] COULD NOT LOAD CORBA \033[1m\033[36m => Using ROS instead of CORBA (experimental)\033[0m");
        print.ln("\033[33m[lwr_sim] Please make sure to run first :\033[0m \n\n \t roslaunch rtt_lwr_gazebo lwr_gazebo.launch\n");
        lwr_sim.using_corba=false;
        return;
    }
}

if(trials != 0) then{

    print.ln("\033[1m\033[32m[lwr_sim] Corba Loaded Sucessfully \033[0m");

    connectPeers("gazebo","lwr_sim")
    if(lwr_sim.connectToGazeboCORBA("gazebo","lwr_gazebo")) then {
        lwr_sim.using_corba=true;
    }
}





